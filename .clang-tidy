Checks: >
  -*,
  bugprone-*,
  google-*,
  misc-*,
  modernize-*,
  performance-*,
  portability-*,
  readability-*,
  -google-readability-namespace-comments,
  -google-runtime-references,
  -readability-identifier-length,
  -readability-redundant-declaration,
  -modernize-use-trailing-return-type,
  -modernize-return-braced-init-list,
  -modernize-avoid-c-arrays,
  -performance-move-const-arg,
  -bugprone-easily-swappable-parameters,
  -readability-convert-member-functions-to-static
# Turn all the warnings from the checks above into errors.
WarningsAsErrors: "*"
HeaderFilterRegex: ".*$"


CheckOptions:
  - { key: readability-identifier-naming.NamespaceCase,          value: lower_case }
  - { key: readability-identifier-naming.ClassCase,              value: CamelCase  }
  - { key: readability-identifier-naming.StructCase,             value: CamelCase  }
  - { key: readability-identifier-naming.TemplateParameterCase,  value: CamelCase  }
  - { key: readability-identifier-naming.FunctionCase,           value: camelBack  }
  - { key: readability-identifier-naming.VariableCase,           value: camelBack }
  - { key: readability-identifier-naming.ClassMemberCase,        value: camelBack }
  - { key: readability-identifier-naming.EnumConstantCase,         value: CamelCase }
  - { key: readability-identifier-naming.ConstexprVariableCase,    value: camelBack }
  - { key: readability-identifier-naming.GlobalConstantCase,       value: CamelCase }
  - { key: readability-identifier-naming.MemberConstantCase,       value: CamelCase }
  - { key: readability-identifier-naming.StaticConstantCase,       value: CamelCase }
  - { key: readability-implicit-bool-conversion.AllowIntegerConditions,  value: 1   }
  - { key: readability-implicit-bool-conversion.AllowPointerConditions,  value: 1   }
  - { key: readability-function-cognitive-complexity.IgnoreMacros,  value: 1   }
  - { key: misc-const-correctness.AnalyzeValues,  value: false   }
  - { key: readability-magic-numbers.AllowMagicNumbers, value: true }
  