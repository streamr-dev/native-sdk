// generated by the protocol buffer streamr pluging. DO NOT EDIT!
// generated from protobuf file "HelloRpc.proto"

#ifndef STREAMR_PROTORPC_HELLORPC_CLIENT_PB_H
#define STREAMR_PROTORPC_HELLORPC_CLIENT_PB_H

#include <folly/experimental/coro/Task.h>
#include "HelloRpc.pb.h" // NOLINT
#include "streamr-proto-rpc/ProtoCallContext.hpp"
#include "streamr-proto-rpc/RpcCommunicator.hpp"


namespace streamr::protorpc {
class HelloRpcServiceClient {
private:
RpcCommunicator& communicator;
public:
    HelloRpcServiceClient(RpcCommunicator& communicator) : communicator(communicator) {}
    folly::coro::Task<HelloResponse> sayHello(const HelloRequest& request, const ProtoCallContext& callContext) {
        return communicator.callRemote<HelloResponse, HelloRequest>("sayHello", request, callContext);
    }
}; // class HelloRpcServiceClient
}; // namespace streamr::protorpc

#endif // STREAMR_PROTORPC_HELLORPC_CLIENT_PB_H

